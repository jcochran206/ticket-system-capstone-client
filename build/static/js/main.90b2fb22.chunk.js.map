{"version":3,"sources":["components/Sections/Home/home.js","components/Sections/About/about.js","components/Sections/Services/service.js","components/validationError/validationError.js","config.js","components/Login/login.js","components/Nav/nav.js","components/Footer/footer.js","components/SignupForm/signUpForm.js","components/Sections/Error/error.js","components/TicketList/ticketlist.js","components/TicketList/AddIncident.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","HowTo","Service","ValidationError","props","message","nessage","Login","state","listOfUsers","username","value","touched","password","url","config","console","log","fetch","then","res","ok","Error","json","data","setState","catch","err","error","event","preventDefault","this","history","push","method","action","onSubmit","e","handleSubmit","htmlFor","type","id","onChange","updateUserName","target","defaultValue","name","updatePassword","React","Component","Nav","Footer","SignUpForm","repeatPassword","trim","length","match","nameError","validateName","passwordError","validatePassword","repeatPasswordError","validateRepeatPassword","updateName","ref","nameInput","updateRepeatPassword","disabled","Tickets","handleAddIncident","incident","handleDelete","incidentid","incidents","filter","parseInt","handleAdd","map","key","title","comments","users_id","inc_pri","office_location","onClick","addIncident","user_id","location","headers","body","JSON","stringify","concat","App","exact","path","component","Hero","About","SignUp","TicketList","AddIncident","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90b2fb22.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Home(){\n    return(\n    <div className=\"wrapper\">\n        <div className=\"hero\">\n            <div className=\"banner\">\n            <h1>Customer Support and Asset management done right!</h1>\n            <p>Looking for help managing your customers or assets We've got you covered</p>\n            <Link to=\"/\" className=\"btn-hero\">Signup Now!</Link>\n            </div>\n        </div>\n        <div className=\"HowTo\">\n            <div className=\"title\">\n                <h2>How To Use</h2>\n            </div>\n            <br/>\n            <div className=\"\">\n                <p>content explaining information on how to use system goes here</p>\n            </div>\n        </div>\n        <div className=\"service-list\">\n            <div className=\"box\">\n                service info here\n            </div>\n            <div className=\"box\">\n                service info here\n            </div>\n        </div>\n        \n    </div>\n    )\n}","import React from 'react';\n\n\nexport default function HowTo() {\n    return(\n        <div className=\"HowTo\">\n            <div className=\"title\">\n                <h2>About Application</h2>\n            </div>\n            <br/>\n            <div className=\"\">\n                <p>about section paragraph here</p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport default function Service() {\n    return(\n        <div className=\"service-list\">\n            <div className=\"box\">\n                service info here\n            </div>\n            <div className=\"box\">\n                service info here\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport default function ValidationError(props){\n    if(props.message){\n        return(\n        <div className=\"error\">{props.nessage}</div>\n        );\n    }\n    return <></>\n}","export default {\n    API_ENDPOINT:'https://ticket-system-capstone-server.herokuapp.com/api'\n    //TOKEN_KEY: 'xxxxxxx',\n    }","import React from 'react';\nimport ValidationError from '../validationError/validationError';\nimport config from '../../config';\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listOfUsers: [],\n            username: {\n                value: '',\n                touched: true\n            },\n            password: {\n                value: '',\n                touched: false\n            }\n        }\n    }\n\n    componentDidMount() {\n        let url = `${config.API_ENDPOINT}/users`;\n        console.log(url)\n        fetch(url)\n          // if the api returns data ...\n          .then((res) => {\n            if (!res.ok) {\n              throw new Error(\"Something went wrong, please try again later.\");\n            }\n            // ... convert it to json\n            return res.json();\n          })\n          // use the json api output\n          .then((data) => {\n              console.log(data);\n            //check if there is meaningful data\n            \n            this.setState({\n              listOfUsers: data,\n            });\n          })\n          .catch((err) => {\n            console.error(err);\n            // this.setState({\n            //     error: err.message\n            // })\n          });\n      }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { username, password } = this.state;\n\n        this.props.history.push('/tickets');\n        console.log('name: ', username.value)\n        console.log('password: ', password.value)\n    }\n\n    updateUserName(username) {\n        this.setState({ username: { value: username, touched: true } });\n    }\n\n    updatePassword(password) {\n        this.setState({ password: { value: password } });\n    }\n\n    // validate inputs here\n    // validateUserName() {\n    //     const name = this.state.username.value.trim();\n    //     if (name.length === 0) {\n    //         return 'Name is required';\n    //     } else if (name.length < 3) {\n    //         return 'Name must be at least 3 characters long';\n    //     }\n    // }\n\n    //vaildate passwords here\n    // validatePassword() {\n    //     const password = this.state.password.value.trim();\n    //     if (password.length === 0) {\n    //         return 'Password is required';\n    //     } else if (password.length < 6 || password.length > 72) {\n    //         return 'Password must be between 6 and 72 characters long';\n    //     } else if (!password.match(/[0-9]/)) {\n    //         return 'Password must contain at least one number';\n    //     }\n    // }\n\n\n    render() {\n        //const usernameError = this.validateUserName();\n        //const passwordError = this.validatePassword();\n\n        return (\n            <form method=\"post\" action=\"/login\" className=\"login\" onSubmit={e => this.handleSubmit(e)}>\n                <h2>Login</h2>\n                <div className=\"login_hint\">* required field</div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username *</label>\n                    <input type=\"text\" className=\"login__control\"\n                        username=\"username\" id=\"username\" onChange={e => this.updateUserName(e.target.value)} defaultValue=\"place username here\" />\n                    {/*this.state.username.touched && <ValidationError message={usernameError} />*/}\n\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password *</label>\n                    <input type=\"password\" className=\"login__control\"\n                        name=\"password\" id=\"password\" onChange={e => this.updatePassword(e.target.value)} />\n                    <div className=\"login__hint\">6 to 72 characters, must include a number</div>\n                    {/* {this.state.password.touched && (\n                        <ValidationError message={passwordError} />\n                    )} */}\n                </div>\n\n                <div className=\"login__button__group\">\n                    <button type=\"reset\" className=\"login__button\">\n                        Cancel\n                </button>\n                    <button type=\"submit\"\n                        className=\"login__button\"\n                        // disabled={\n                        //     // this.validateUserName() ||\n                        //     // this.validatePassword()\n                        // }\n                    >\n                        Submit\n                </button>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport default class Nav extends Component {\n    render(){\n        return (\n            <div className=\"nav\">\n                <div className=\"logo\">\n                    LOGO Here\n                </div>\n                <ul className=\"navLinks\">\n                    <Link to=\"/\">\n                        Home\n                    </Link>\n                    <Link to=\"/about\">\n                        About\n                    </Link>\n                    <Link to=\"/login\">\n                        Login\n                    </Link>\n                    <Link to=\"/signup\">\n                        Signup\n                    </Link>\n                    <Link to=\"/tickets\">\n                        tickets\n                    </Link>\n                </ul>\n             </div>\n          )\n      }\n    }","import React from 'react';\nimport '../Footer/footer.css'\n\nexport default function Footer() {\n    return (\n        <div className=\"footer\">\n        <div className=\"copy\">\n            <h5>Made by Jonathan Cochran &#169;2020</h5>\n        </div>\n        <div className=\"social\">\n            <ul>\n                <li>github</li>\n                <li>portfolio</li>\n                <li>LinkedIn</li>\n            </ul>\n        </div>\n        </div>\n    )\n}","import React from 'react';\nimport ValidationError from '../validationError/validationError';\n\nexport default class SignUpForm extends React.Component {\nconstructor(props){\n    super(props);\n    this.state = {\n        name: {\n            value: '',\n            touched: false\n        },\n        password: {\n            value: '',\n            touched: false\n        },\n        repeatPassword: {\n            value: '',\n            touched: false\n        }\n    }      \n}\n\n\nhandleSubmit(event) {\n    event.preventDefault();\n    const { name, password, repeatPassword } = this.state;\n\n    console.log('Name: ', name.value);\n    console.log('Password: ', password.value);\n    console.log('Repeat Password: ', repeatPassword.value);\n}\n\n//update methods\nupdateName(name) {\n    this.setState({name: {value: name, touched: true}});\n}\n    \nupdatePassword(password) {\n    this.setState({password: {value: password}});\n}\n    \nupdateRepeatPassword(repeatPassword) {\n    this.setState({repeatPassword: {value: repeatPassword}});\n}\n// validate inputs here\nvalidateName() {\n    const name = this.state.name.value.trim();\n    if (name.length === 0) {\n        return 'Name is required';\n    } else if (name.length < 3) {\n        return 'Name must be at least 3 characters long';\n    }\n}\n\n//vaildate passwords here\nvalidatePassword() {\n    const password = this.state.password.value.trim();\n    if (password.length === 0) {\n        return 'Password is required';\n    } else if (password.length < 6 || password.length > 72) {\n        return 'Password must be between 6 and 72 characters long';\n    } else if (!password.match(/[0-9]/)) {\n        return 'Password must contain at least one number';\n    }\n}\n\n//validate repeat password\nvalidateRepeatPassword() {\n    const repeatPassword = this.state.repeatPassword.value.trim();\n    const password = this.state.password.value.trim();\n\n    if (repeatPassword !== password) {\n      return 'Passwords do not match';\n    }\n}\n\nrender(){\n    const nameError = this.validateName();\n    const passwordError = this.validatePassword();\n    const repeatPasswordError = this.validateRepeatPassword();\n    return(\n        <form className=\"registration\" onSubmit={e => this.handleSubmit(e)}>\n        <h2>Register</h2>\n        <div className=\"registration__hint\">* required field</div>  \n        <div className=\"form-group\">\n            <label htmlFor=\"name\">Name *</label>\n            <input type=\"text\" className=\"registration__control\"\n            name=\"name\" id=\"name\" onChange={e => this.updateName(e.target.value)} ref={this.nameInput} defaultValue=\"frank\"/>\n            {this.state.name.touched && <ValidationError message={nameError} />}\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"password\">Password *</label>\n            <input type=\"password\" className=\"registration__control\"\n            name=\"password\" id=\"password\" onChange={e => this.updatePassword(e.target.value)}/>\n            <div className=\"registration__hint\">6 to 72 characters, must include a number</div>\n            {this.state.password.touched && (\n            <ValidationError message={passwordError} />\n          )}\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"repeatPassword\">Repeat Password *</label>\n            <input type=\"password\" className=\"registration__control\"\n            name=\"repeatPassword\" id=\"repeatPassword\" onChange={e => this.updateRepeatPassword(e.target.value)}/>\n            {this.state.repeatPassword.touched && (\n            <ValidationError message={repeatPasswordError} />\n          )}\n        </div>\n    \n        <div className=\"registration__button__group\">\n            <button type=\"reset\" className=\"registration__button\">\n                Cancel\n            </button>\n            <button type=\"submit\" \n            className=\"registration__button\"\n            disabled={\n                this.validateName() ||\n                this.validatePassword() ||\n                this.validateRepeatPassword()\n              }\n            >\n                Save\n            </button>\n        </div>\n        </form>  \n        )\n    }\n}","import React from 'react'\n\nfunction Error() {\n    return(\n        <div className='error'>\n            <h2>Error Component</h2>\n            <h6>404 Error Page here</h6>\n        </div>\n    )\n}\n\nexport default Error","import React from 'react';\nimport config from '../../config';\n\nclass Tickets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            incidents: []\n        }\n    }\n\n  componentDidMount(){\n    fetch(`${config.API_ENDPOINT}/incidents`)\n    .then(res => res.json())\n    .then(incidents => {\n      this.setState({\n        incidents\n\n      }, () => {\n        console.log(this.state)\n      })\n    })\n  }\n\n  handleAddIncident = (incident) => {\n    \n  }\n\n  handleDelete = (incidentid) => {\n    \n    fetch(`${config.API_ENDPOINT}/incidents/${incidentid}`, {\n      method: 'DELETE',\n    })\n    .then(() => {\n      this.setState({\n        incidents: this.state.incidents.filter(incident => parseInt(incident.id) !== parseInt(incidentid))\n      })\n      this.props.history.push('/tickets')\n    })\n  }\n\n  handleAdd = () => {\n    this.props.history.push('/addIncident')\n}\n\n   render(){\n       let { incidents } = this.state;\n       return (\n        <div>\n           <h2>Leaf desk Incidents Page</h2>\n  <table className=\"ticket-table\">\n  <tr>\n    <th>#</th>\n    <th>Title</th>\n    <th>Comments</th>\n    <th>Priority</th>\n    <th>Owner</th>\n    <th>Location</th>\n    <th>Add</th>\n    <th>Edit</th>\n    <th>Delete</th>\n  </tr>\n  \n  {incidents.map(incident => {\n    return(\n    <tr key={incident.id}>\n    <td>{incident.id}</td>\n   <td>{incident.title}</td>\n    <td>{incident.comments}</td>\n    <td>{incident.users_id}</td>\n    <td>{incident.inc_pri}</td>\n    <td>{incident.office_location}</td>\n   <td><button className=\"btn-add\" onClick={() => this.handleAdd()}>Add</button></td>\n   <td><button className=\"btn-update\">Update</button></td>\n   <td><button className=\"btn-delete\" onClick={() => this.handleDelete(incident.id)}>Delete</button></td>\n </tr>\n\n    )\n  })}\n  \n</table>\n        </div>\n       )\n   }\n}\n\nexport default Tickets;","import React from 'react';\nimport config from '../../config';\n\n\nclass addIncident extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            incident: [],\n        }\n    }\n\n    handleAdd = (e) => {\n        e.preventDefault();\n        // title comment user_id inc_pri location\n        const title = e.target.value\n        const comments = e.target.value \n        const user_id = e.target.value \n        const inc_pri = e.target.value \n        const location = e.target.value \n        const incident = {title, comments, user_id, inc_pri, location}\n\n        fetch(`${config.API_ENDPOINT}/incidents`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(incident)\n        })\n        .then(incident => {\n            this.setState({\n                incident: this.state.incident.concat(incident)\n            })\n        })\n\n\n    } \n\n    render() {\n        const {title, comments, user_id, inc_pri, location} = this.state;\n        return (\n            <div>\n            <h2>Add Incidents</h2>\n            <form>\n            <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title *</label>\n                    <input type=\"text\" className=\"login__control\"\n                        title=\"title\" id=\"title\" onChange={title} defaultValue=\"place title here\" />\n            </div>\n            <div className=\"form-group\">\n                    <label htmlFor=\"Comments\">Comments</label>\n                    <input type=\"text\" className=\"login__control\"\n                        comments=\"comments\" id=\"comments\" onChange={comments} defaultValue=\"place Comments here\" />\n            </div>\n            <div className=\"form-group\">\n                    <label htmlFor=\"user_id\">Owner</label>\n                    <input type=\"text\" className=\"login__control\"\n                        user_id=\"user_id\" id=\"user_id\" onChange={user_id} defaultValue=\"place Owner here\" />\n            </div>\n            <div className=\"form-group\">\n                    <label htmlFor=\"priority\">priority</label>\n                    <input type=\"text\" className=\"login__control\"\n                        inc_pri=\"inc_pri\" id=\"inc_pri\" onChange={inc_pri} defaultValue=\"place priority here\" />\n            </div>\n            \n            <div className=\"form-group\">\n                    <label htmlFor=\"location\">Location</label>\n                    <input type=\"text\" className=\"login__control\"\n                        location=\"location\" id=\"location\" onChange={location} defaultValue=\"place location here\" />\n            </div>\n            <button className=\"btn-add\" onChange={this.handleAdd}>ADD</button>\n            </form>\n            {console.log(title,comments,user_id,inc_pri,location)}\n        </div>\n        )\n    }\n}\n\nexport default addIncident;","import React from 'react';\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\n//landing page components\nimport Hero from './components/Sections/Home/home';\nimport HowTo from './components/Sections/About/about';\nimport Service from './components/Sections/Services/service';\nimport Login from './components/Login/login';\nimport Nav from './components/Nav/nav'; \nimport Footer from './components/Footer/footer';\nimport SignUp from './components/SignupForm/signUpForm';\nimport About from './components/Sections/About/about';\nimport Error from './components/Sections/Error/error';\nimport TicketList from './components/TicketList/ticketlist';\nimport AddIncident from './components/TicketList/AddIncident';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Nav />\n       <Switch>\n          <Route exact path='/' component={Hero} />\n          <Route path='/hero/:howto' component={HowTo} />\n          <Route path=\"/hero/:services\" component={Service} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/tickets\" component={TicketList} />\n          <Route path=\"/addincident\" component={AddIncident} />\n          <Route component={Error}/>\n        </Switch>\n      </BrowserRouter>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}